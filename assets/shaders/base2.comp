#version 430 core

struct BufferData
{
	vec4	cameraPosition;
};

struct Voxel
{
	uint	type;
	int		children;
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (binding = 0, rgba32f) uniform image2D imgOutput;
layout (std430, binding = 1) buffer voxelBuffer
{
	BufferData	data;
	Voxel		voxels[];
};

void main()
{ 
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
	float x = float(gl_GlobalInvocationID.x);
	float y = float(gl_GlobalInvocationID.y);

	vec4 color = vec4(data.cameraPosition.x / x, 1.0, 1.0, 1.0);
	if (data.cameraPosition.x > x) color = vec4(1.0, 0.0, 0.0, 1.0);
	
	imageStore(imgOutput, coords, color);
}