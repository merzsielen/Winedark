#version 430 core

struct Voxel
{
	uint	type;
	int		children;
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (binding = 0, rgba32f) uniform image2D imgOutput;
layout (std430, binding = 1) buffer voxelBuffer
{
	Voxel	voxels[];
};

void main()
{
	uint nVoxels = voxels[0].type;
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
	ivec4 color = ivec4(0.0, 0.0, 0.0, 1.0);

	int i = coords.x + (coords.y * 1600);

	if (voxels[i].type != 0)
	{
		color = ivec4(0.0, 0.0, 1.0, 1.0);

		if (voxels[i].children != -1)
		{
			color = ivec4(1.0, 0.0, 0.0, 1.0);
		}
	}

	imageStore(imgOutput, coords, color);
}